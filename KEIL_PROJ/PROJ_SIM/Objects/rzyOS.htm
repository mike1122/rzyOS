<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\rzyOS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\rzyOS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri May 15 20:03:24 2020
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; task_systemtick_handler &rArr; rzyOS_wqueue_tick_handle &rArr; rzyOS_sem_post &rArr; rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[d]">Interrupt0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">Interrupt0_Handler</a><BR>
 <LI><a href="#[e]">Interrupt1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">Interrupt1_Handler</a><BR>
 <LI><a href="#[f]">Interrupt2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">Interrupt2_Handler</a><BR>
 <LI><a href="#[10]">Interrupt3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">Interrupt3_Handler</a><BR>
 <LI><a href="#[11]">Interrupt4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">Interrupt4_Handler</a><BR>
 <LI><a href="#[12]">Interrupt5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">Interrupt5_Handler</a><BR>
 <LI><a href="#[13]">Interrupt6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">Interrupt6_Handler</a><BR>
 <LI><a href="#[14]">Interrupt7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">Interrupt7_Handler</a><BR>
 <LI><a href="#[15]">Interrupt8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">Interrupt8_Handler</a><BR>
 <LI><a href="#[16]">Interrupt9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">Interrupt9_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">BusFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[d]">Interrupt0_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[e]">Interrupt1_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[f]">Interrupt2_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[10]">Interrupt3_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[11]">Interrupt4_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[12]">Interrupt5_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[13]">Interrupt6_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[14]">Interrupt7_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[15]">Interrupt8_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[16]">Interrupt9_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from switch.o(.emb_text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from rzyos_cpu.o(i.SysTick_Handler) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[17]">SystemInit</a> from system_armcm3.o(i.SystemInit) referenced from startup_armcm3.o(.text)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_armcm3.o(.text) referenced from startup_armcm3.o(RESET)
 <LI><a href="#[1f]">__main</a> from __main.o(!!!main) referenced from startup_armcm3.o(.text)
 <LI><a href="#[19]">idle_task_entry</a> from main.o(i.idle_task_entry) referenced from main.o(i.main)
 <LI><a href="#[1e]">rzyOS_wqueue_task</a> from rzyos_wqueue.o(i.rzyOS_wqueue_task) referenced from rzyos_wqueue.o(i.rzyOS_wqueue_task_init)
 <LI><a href="#[1a]">task1_entry</a> from rzyos_app.o(i.task1_entry) referenced from rzyos_app.o(i.rzyOS_app_init)
 <LI><a href="#[1b]">task2_entry</a> from rzyos_app.o(i.task2_entry) referenced from rzyos_app.o(i.rzyOS_app_init)
 <LI><a href="#[1c]">task3_entry</a> from rzyos_app.o(i.task3_entry) referenced from rzyos_app.o(i.rzyOS_app_init)
 <LI><a href="#[1d]">task4_entry</a> from rzyos_app.o(i.task4_entry) referenced from rzyos_app.o(i.rzyOS_app_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[22]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[23]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[25]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[70]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[71]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[72]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[73]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[74]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[75]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[76]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[77]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[78]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[79]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[80]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[81]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[82]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[83]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[84]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[2a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[85]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[87]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[88]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[8a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[21]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[8d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry5.o(.ARM.Collect$$rtentry$$00000005))

<P><STRONG><a name="[24]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[8e]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[26]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8f]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[29]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[90]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, switch.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Interrupt0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Interrupt1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Interrupt2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Interrupt3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Interrupt4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Interrupt5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>Interrupt6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>Interrupt7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>Interrupt8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>Interrupt9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[97]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rzyos_cpu.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SysTick_Handler &rArr; task_systemtick_handler &rArr; rzyOS_wqueue_tick_handle &rArr; rzyOS_sem_post &rArr; rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SystemInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_armcm3.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm3.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>bitmap_clean</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bitmaplib.o(i.bitmap_clean))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_remove_ready_list
</UL>

<P><STRONG><a name="[2f]"></a>bitmap_get_first_set</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, bitmaplib.o(i.bitmap_get_first_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_size
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_highest_ready
</UL>

<P><STRONG><a name="[63]"></a>bitmap_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bitmaplib.o(i.bitmap_init))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_init
</UL>

<P><STRONG><a name="[60]"></a>bitmap_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bitmaplib.o(i.bitmap_set))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_insert_ready_list
</UL>

<P><STRONG><a name="[30]"></a>bitmap_size</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmaplib.o(i.bitmap_size))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_get_first_set
</UL>

<P><STRONG><a name="[37]"></a>delay_list_insert_time_node</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(i.delay_list_insert_time_node))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_list_insert_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add_first
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>

<P><STRONG><a name="[39]"></a>delay_list_remove_time_node</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.delay_list_remove_time_node))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_pos_node
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_task_delay_list_remove
</UL>

<P><STRONG><a name="[19]"></a>idle_task_entry</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.idle_task_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = idle_task_entry &rArr; rzyOS_wqueue_task_init &rArr; task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_systick_period
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_task_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_app_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_disable
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_tick_sync
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[38]"></a>list_add_first</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rzyos_list.o(i.list_add_first))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_insert_ready_list
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_insert_time_node
</UL>

<P><STRONG><a name="[4f]"></a>list_add_last</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rzyos_list.o(i.list_add_last))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[51]"></a>list_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rzyos_list.o(i.list_count))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait_count
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_remove_ready_list
</UL>

<P><STRONG><a name="[5d]"></a>list_first_node</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rzyos_list.o(i.list_first_node))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_highest_ready
</UL>

<P><STRONG><a name="[4b]"></a>list_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rzyos_list.o(i.list_init))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_module_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay_list_init
</UL>

<P><STRONG><a name="[3a]"></a>list_remove_pos_node</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rzyos_list.o(i.list_remove_pos_node))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_remove
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_remove_ready_list
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_remove_time_node
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_call
</UL>

<P><STRONG><a name="[27]"></a>main</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_run_first
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_module_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_highest_ready
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay_list_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_tick_count_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_usage_state_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5f]"></a>node_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rzyos_list.o(i.node_init))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>

<P><STRONG><a name="[53]"></a>remove_list_first</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rzyos_list.o(i.remove_list_first))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[3c]"></a>rzyOS_app_init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rzyos_app.o(i.rzyOS_app_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rzyOS_app_init &rArr; task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[4a]"></a>rzyOS_event_init</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, rzyos_event.o(i.rzyOS_event_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rzyOS_event_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_init
</UL>

<P><STRONG><a name="[4c]"></a>rzyOS_event_remove</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rzyos_event.o(i.rzyOS_event_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rzyOS_event_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_pos_node
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[4d]"></a>rzyOS_event_wait</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, rzyos_event.o(i.rzyOS_event_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rzyOS_event_wait &rArr; delay_list_insert_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add_last
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_remove_ready_list
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_insert_time_node
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_wait
</UL>

<P><STRONG><a name="[50]"></a>rzyOS_event_wait_count</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, rzyos_event.o(i.rzyOS_event_wait_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rzyOS_event_wait_count
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_count
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
</UL>

<P><STRONG><a name="[52]"></a>rzyOS_event_wakeup</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, rzyos_event.o(i.rzyOS_event_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_list_first
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_insert_ready_list
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_task_delay_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
</UL>

<P><STRONG><a name="[56]"></a>rzyOS_sem_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rzyos_semaphore.o(i.rzyOS_sem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rzyOS_sem_init &rArr; rzyOS_event_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_module_init
</UL>

<P><STRONG><a name="[57]"></a>rzyOS_sem_post</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, rzyos_semaphore.o(i.rzyOS_sem_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rzyOS_sem_post &rArr; rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait_count
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_tick_handle
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_task
</UL>

<P><STRONG><a name="[59]"></a>rzyOS_sem_wait</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, rzyos_semaphore.o(i.rzyOS_sem_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rzyOS_sem_wait &rArr; rzyOS_event_wait &rArr; delay_list_insert_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_task
</UL>

<P><STRONG><a name="[54]"></a>rzyOS_task_delay_list_remove</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.rzyOS_task_delay_list_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_remove_time_node
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
</UL>

<P><STRONG><a name="[45]"></a>rzyOS_tick_count_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.rzyOS_tick_count_init))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>rzyOS_wqueue_module_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rzyos_wqueue.o(i.rzyOS_wqueue_module_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rzyOS_wqueue_module_init &rArr; rzyOS_sem_init &rArr; rzyOS_event_init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>rzyOS_wqueue_task_init</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rzyos_wqueue.o(i.rzyOS_wqueue_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rzyOS_wqueue_task_init &rArr; task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[5b]"></a>rzyOS_wqueue_tick_handle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rzyos_wqueue.o(i.rzyOS_wqueue_tick_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rzyOS_wqueue_tick_handle &rArr; rzyOS_sem_post &rArr; rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_call
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[3e]"></a>set_systick_period</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, rzyos_cpu.o(i.set_systick_period))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_systick_period
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[1a]"></a>task1_entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rzyos_app.o(i.task1_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = task1_entry &rArr; task_delay &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rzyos_app.o(i.rzyOS_app_init)
</UL>
<P><STRONG><a name="[1b]"></a>task2_entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rzyos_app.o(i.task2_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = task2_entry &rArr; task_delay &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rzyos_app.o(i.rzyOS_app_init)
</UL>
<P><STRONG><a name="[1c]"></a>task3_entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rzyos_app.o(i.task3_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = task3_entry &rArr; task_delay &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rzyos_app.o(i.rzyOS_app_init)
</UL>
<P><STRONG><a name="[1d]"></a>task4_entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rzyos_app.o(i.task4_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = task4_entry &rArr; task_delay &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rzyos_app.o(i.rzyOS_app_init)
</UL>
<P><STRONG><a name="[5c]"></a>task_delay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rzyos_time.o(i.task_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = task_delay &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_remove_ready_list
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_insert_time_node
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4_entry
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_entry
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2_entry
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1_entry
</UL>

<P><STRONG><a name="[43]"></a>task_delay_list_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.task_delay_list_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task_delay_list_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>task_enter_critical</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, switch.o(i.task_enter_critical))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_wait
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait_count
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_tick_handle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_remove
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_enable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_disable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[41]"></a>task_exit_critical</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, switch.o(i.task_exit_critical))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_wait
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait_count
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_tick_handle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_remove
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_enable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_disable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[48]"></a>task_highest_ready</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.task_highest_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_first_node
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_get_first_set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>task_init</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, rzyos_task.o(i.task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = task_init &rArr; task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_insert_ready_list
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_task_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_app_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>task_insert_ready_list</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.task_insert_ready_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task_insert_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add_first
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_set
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wakeup
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[4e]"></a>task_remove_ready_list</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.task_remove_ready_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task_remove_ready_list
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_pos_node
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_count
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_wait
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
</UL>

<P><STRONG><a name="[49]"></a>task_run_first</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, switch.o(i.task_run_first))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>task_schedule</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.task_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_switch
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_highest_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_wait
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_delay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_enable
</UL>

<P><STRONG><a name="[3b]"></a>task_schedule_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.task_schedule_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task_schedule_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[32]"></a>task_schedule_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.task_schedule_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = task_schedule_enable &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>

<P><STRONG><a name="[42]"></a>task_schedule_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.task_schedule_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task_schedule_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitmap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>task_switch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, switch.o(i.task_switch))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
</UL>

<P><STRONG><a name="[2e]"></a>task_systemtick_handler</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, main.o(i.task_systemtick_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_systemtick_handler &rArr; rzyOS_wqueue_tick_handle &rArr; rzyOS_sem_post &rArr; rzyOS_event_wakeup &rArr; rzyOS_task_delay_list_remove &rArr; delay_list_remove_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_exit_critical
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_enter_critical
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_tick_handle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_event_remove
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_list_first
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_count
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add_last
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_insert_ready_list
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_list_remove_time_node
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[64]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>

<P><STRONG><a name="[68]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>

<P><STRONG><a name="[9b]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>

<P><STRONG><a name="[69]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[67]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[66]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_usage_detect
</UL>

<P><STRONG><a name="[6a]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[6c]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[31]"></a>check_cpu_usage_detect</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(i.check_cpu_usage_detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = check_cpu_usage_detect &rArr; task_schedule_enable &rArr; task_schedule &rArr; task_highest_ready &rArr; bitmap_get_first_set
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_schedule_enable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_systemtick_handler
</UL>

<P><STRONG><a name="[3f]"></a>cpu_tick_sync</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.cpu_tick_sync))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_task_entry
</UL>

<P><STRONG><a name="[46]"></a>cpu_usage_state_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.cpu_usage_state_init))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>rzyOS_wqueue_call</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rzyos_wqueue.o(i.rzyOS_wqueue_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rzyOS_wqueue_call
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_pos_node
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_tick_handle
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_task
</UL>

<P><STRONG><a name="[1e]"></a>rzyOS_wqueue_task</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rzyos_wqueue.o(i.rzyOS_wqueue_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rzyOS_wqueue_task &rArr; rzyOS_sem_wait &rArr; rzyOS_event_wait &rArr; delay_list_insert_time_node
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_wait
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_sem_post
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rzyOS_wqueue_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rzyos_wqueue.o(i.rzyOS_wqueue_task_init)
</UL>
<P><STRONG><a name="[6b]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[65]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
